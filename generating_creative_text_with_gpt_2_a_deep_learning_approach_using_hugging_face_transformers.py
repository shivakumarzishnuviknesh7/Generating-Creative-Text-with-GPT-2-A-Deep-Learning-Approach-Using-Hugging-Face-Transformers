# -*- coding: utf-8 -*-
"""Generating Creative Text with GPT-2: A Deep Learning Approach Using Hugging Face Transformers.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rkzaNvaRPsEdZAopbg-rTCJQ6YA009Mh
"""

!pip install transformers

from transformers import GPT2LMHeadModel, GPT2Tokenizer

# Load the tokenizer
tokenizer = GPT2Tokenizer.from_pretrained("openai-community/gpt2")

# Load the model
model = GPT2LMHeadModel.from_pretrained("openai-community/gpt2")

# Step 3: Define the text generation function with beam search
def generate_text(prompt, max_length=50, num_return_sequences=1, num_beams=3):
    # Encode the prompt
    input_ids = tokenizer.encode(prompt, return_tensors='pt')

    # Generate text with beam search
    output = model.generate(
        input_ids,
        max_length=max_length,
        num_return_sequences=num_return_sequences,
        num_beams=num_beams,
        no_repeat_ngram_size=2,
        early_stopping=True
    )

    # Decode the generated text
    generated_texts = [tokenizer.decode(output[i], skip_special_tokens=True) for i in range(num_return_sequences)]

    return generated_texts

# Step 4: Generate text using the model
prompt = "Once upon a time"
generated_texts = generate_text(prompt, max_length=100, num_return_sequences=3, num_beams=3)

for i, text in enumerate(generated_texts):
    print(f"Generated Text {i+1}:\n{text}\n")

